#!/bin/bash
# Purpose: Kubernetes Cluster

# Kubectl Installation
curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
chmod +x ./kubectl
mv ./kubectl /usr/local/bin/kubectl
kubectl version --client

# Kind Installation
# Latest Version
# https://github.com/kubernetes-sigs/kind
curl -Lo ./kind "https://kind.sigs.k8s.io/dl/v0.9.0/kind-$(uname)-amd64"
# curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.9.0/kind-linux-amd64
# curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.8.1/kind-linux-amd64
chmod +x ./kind
mv ./kind /usr/local/bin

#########################################################################
# https://hub.docker.com/u/kindest
# https://hub.docker.com/r/kindest/node/tags

# kind create cluster --name cloudgeeks-ca

 kind create cluster --name cloudgeeks-ca --image kindest/node:v1.20.0

# kind create cluster --name cloudgeeks-ca --image kindest/node:v1.19.0

# kind create cluster --name cloudgeeks-ca --image kindest/node:v1.18.8

# kind create cluster --name cloudgeeks-ca --image kindest/node:v1.18.6

# kubectl cluster-info --context kind-cloudgeeks-ca

# kind delete cluster --name kind-cloudgeeks-ca

# Delete a cluster ---> docker rm -f $(docker ps -aq)

# Cluster stuck   ----> systemctl restart docker

##############################################################################################################################################################

# Operator Installation

kubectl create ns kafka

kubectl apply -f "https://strimzi.io/install/latest?namespace=kafka"



# cloudgeeks-ca Installation with replication (Internal) ---> ephemeral nodeport

cat << EOF | kubectl apply -n kafka -f -
apiVersion: kafka.strimzi.io/v1beta1
kind: Kafka
metadata:
  name: cloudgeeks-ca-kafka
spec:
  kafka:
    version: 2.6.0
    replicas: 3
    listeners:
      - name: plain
        port: 9092
        type: internal
        tls: false
      - name: tls
        port: 9093
        type: internal
        tls: true
        authentication:
          type: tls
      - name: external
        port: 9094
        type: nodeport
        tls: false
    config:
      offsets.topic.replication.factor: 3
      transaction.state.log.replication.factor: 3
      transaction.state.log.min.isr: 2
      log.message.format.version: "2.6"
    storage:
      type: ephemeral  
  zookeeper:
    replicas: 3
    storage:
      type: ephemeral
  entityOperator:
    topicOperator: {}
    userOperator: {}
EOF

